<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">


<generatorConfiguration>
        <properties resource="applicationContext.properties"/>

        <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
                <property name="beginningDelimiter" value="`"/>
                <property name="endingDelimiter" value="`"/>

                <plugin type="${mapper.plugin}">
                        <property name="mappers" value="${mapper.Mapper}"/>
                </plugin>
                <!--jdbc 连接-->
                <jdbcConnection driverClass="${jdbc.driverClass}"
                                connectionURL="${jdbc.url}"
                                userId="${jdbc.user}"
                                password="${jdbc.password}">
                </jdbcConnection>

                <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
                <javaTypeResolver >
                        <property name="forceBigDecimals" value="false" />
                </javaTypeResolver>
                <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
                    targetPackage     指定生成的model生成所在的包名
                    targetProject     指定在该项目下所在的路径
                -->
                <javaModelGenerator targetPackage="${targetModelPackage}" targetProject="${targetJavaProject}">
                        <!-- 是否对model添加 构造函数 -->
                        <property name="constructorBased" value="true"/>

                        <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
                        <property name="enableSubPackages" value="false"/>

                        <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
                        <property name="immutable" value="false"/>
                </javaModelGenerator>

                <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
                <sqlMapGenerator targetPackage="${targetXMLPackage}"  targetProject="${targetResourcesProject}">
                        <property name="enableSubPackages" value="false"/>
                </sqlMapGenerator>

                <javaClientGenerator targetPackage="${targetMapperPackage}" targetProject="${targetJavaProject}" type="XMLMAPPER" >
                        <property name="enableSubPackages" value=""/>
                        <!--
                                定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：
                                public;
                                private;
                                protected;
                                default
                                注意：如果 targetRuntime="MyBatis3",此参数被忽略
                         -->
                        <property name="exampleMethodVisibility" value=""/>
                        <!--
                          方法名计数器
                          Important note: this property is ignored if the target runtime is MyBatis3.
                         -->
                        <property name="methodNameCalculator" value=""/>

                        <!--
                             为生成的接口添加父接口
                         -->
                        <property name="rootInterface" value=""/>
                </javaClientGenerator>
                <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->
                <table schema="live_radio" tableName="live" domainObjectName="Live" enableCountByExample="true"
                       enableDeleteByExample="true" enableSelectByExample="true"
                       enableUpdateByExample="true">
                        <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
                </table>
        </context>
        
</generatorConfiguration>